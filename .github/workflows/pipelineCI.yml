name: Workflow
on:
  push:
    branches:
      - feat

jobs:
  SAST:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Necesario para el análisis de SonarCloud

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install
      
    - name: Build project
      run: npm run build

    - name: Validando existencia del proyecto en sonar
      run: |
        set +e
        curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' -d 'name=laboratorio-final-2' -d 'project=laboratorio-final-2' -d 'organization=test-laboratorio' -d 'visibility=public'
        if [ $? -ne 0 ]; then
          echo "Proyecto ya existe en Sonarcloud"
          echo "::set-output name=proyectoExiste::1"
        else
          echo "Proyecto laboratorio-final creado exitosamente en Sonarcloud"
        
          echo "Se establece rama main feat como rama por defecto"
          curl -X POST -u "${{ secrets.SONAR_TOKEN }}:" 'https://sonarcloud.io/api/project_branches/rename' -d 'name=main' -d 'project=laboratorio-final-2'
        fi
        set -e
    - name: Ejecutar análisis SonarCloud
      run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=laboratorio-final-2\
            -Dsonar.organization=test-laboratorio\
            -Dsonar.sources=./ \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=main
    - name: Validando resultado de SonarCloud
      run: |
          projectKey="laboratorio-final-2"
          branchName="main"
      
          issueCount=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/issues/search?componentKeys=${projectKey}&branch=${branchName}&types=VULNERABILITY&severities=BLOCKER,CRITICAL,MAJOR" \
            | jq '.total')

          echo "Vulnerabilidades críticas/altas/medias encontradas: $issueCount"

          if [ "$issueCount" -gt 0 ]; then
            echo "Se encontraron vulnerabilidades críticas, altas o medias. Deteniendo el pipeline..."
            exit 1
          else
            echo "No se encontraron vulnerabilidades críticas, altas ni medias. Continuando..."
          fi